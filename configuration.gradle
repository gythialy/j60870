project.ext {

    cfgVersion = "1.7.2"

    cfgGroup = "org.openmuc"

    cfgCopyDependencies = false

    cfgCopyToRoot = false

    cfgSignPom = true

    cfgRepository = project.properties.sonatypeRepository

    cfgSnapshotRepository = project.properties.sonatypeSnapshotRepository

    cfgRepositoryUser = project.properties.sonatypeUser

    cfgRepositoryPass = project.properties.sonatypePass

    javaProjects = allprojects

    distributionProjects = allprojects.findAll {
        it.getPath() == ":cli-app" ||
                it.getPath() == ":"
    }

    repositoryProjects = allprojects.findAll {
        it.getPath() == ":"
    }

    docProjects = distributionProjects
}

tasks.withType(Tar) {

    into(project.name) {
        from("./") {
            include "*.gradle"
            include "license/**"
            include "doc/CHANGELOG.txt"
            include "run-scripts/**"
            include "gradle/wrapper/**"
            include "gradlew"
            include "gradlew.bat"
            include "build/libs/**"
            include "src/**"
            include "cli-app/**"
        }

        if (name.equals("tar")) {
            exclude "**/dependencies/**/src"
            exclude "**/bin"
            exclude "**/.project"
            exclude "**/.classpath"
            exclude "**/.gradle"
            exclude "**/.settings"
            exclude "gitlabRelease.gradle"

        }

        from("./build/") {
            include "settings.gradle"
        }
    }

    into(project.name + "/doc/user-guide/") {
        from("./build/asciidoc/html5/") {
            include "**"
        }
        from("./build/asciidoc/pdf/") {
            include "*.pdf"
        }
    }

    into(project.name + "/doc/") {
        from("./build/docs/") {
            include "javadoc/**"
        }
    }

}


//------------------project specific configurations--------------------

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "osgi"
apply plugin: "maven"
apply plugin: "signing"

dependencies {
    testCompile group: "org.powermock", name: "powermock-module-junit4", version: "1.6.4"
    testCompile group: "org.powermock", name: "powermock-api-mockito", version: "1.6.4"
    testCompile group: "pl.pragmatists", name: "JUnitParams", version: "1.1.0"
    testCompile group: "org.awaitility", name: "awaitility-proxy", version: "3.1.3"
}

jar {
    manifest {
        name = "j60870"
        instruction "Export-Package", "!org.openmuc.j60870.internal.internal.*,*"
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.project {
                name "j60870"
                description "j60870 is an IEC 60870-5-104 client and server library."

                licenses {
                    license {
                        name "GNU General Public License"
                        url "http://www.gnu.org/copyleft/gpl-3.0.html"
                        distribution "repo"
                    }
                }

            }
        }
    }
}
